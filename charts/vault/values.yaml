
vault:
  global:
    enabled: true
    tlsDisable: false
    # resources:
    #   requests:
    #     memory: 256Mi
    #     cpu: 250m
    #   limits:
    #     memory: 256Mi
    #     cpu: 250m

  server:
    # Use the Enterprise Image
    image:
      repository: "hashicorp/vault"
      tag: "1.16.1"

    # These Resource Limits are in line with node requirements in the
    # Vault Reference Architecture for a Small Cluster
    # resources:
    #   requests:
    #     memory: 8Gi
    #     cpu: 2000m
    #   limits:
    #     memory: 16Gi
    #     cpu: 2000m

    # For HA configuration and because we need to manually init the vault,
    # we need to define custom readiness/liveness Probe settings
    readinessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    livenessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true"
      initialDelaySeconds: 60

    # extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be
    # used to include variables required for auto-unseal.
    extraEnvironmentVars:
      VAULT_CACERT: /vault/userconfig/vault-tls-ca/ca.crt

    # extraVolumes is a list of extra volumes to mount. These will be exposed
    # to Vault in the path `/vault/userconfig/<name>/`.
    extraVolumes:
      - type: secret
        name: vault-tls-server
      - type: secret
        name: vault-tls-ca
      # - type: secret
      #   name: kms-creds

    # This configures the Vault Statefulset to create a PVC for audit logs.
    # See https://www.vaultproject.io/docs/audit/index.html to know more
    auditStorage:
      enabled: true

    standalone:
      enabled: true
      config: |
        ui = true
        listener "tcp" {
          address = "[::]:8200"
          tls_cert_file = "/vault/userconfig/vault-tls-server/tls.crt"
          tls_key_file  = "/vault/userconfig/vault-tls-server/tls.key"
        }        
        storage "raft" {
          path = "/vault/data"
        }
    dataStorage:
      enabled: true
      size: 10Gi

    # Run Vault in "HA" mode.
    ha:
      enabled: false

      # enabled: true
      # replicas: 5
      # raft:
      #   enabled: true
      #   setNodeId: true

      #   config: |
      #     ui = true
      #     cluster_name = "vault-integrated-storage"
      #     listener "tcp" {
      #       address = "[::]:8200"
      #       cluster_address = "[::]:8201"
      #       tls_cert_file = "/vault/userconfig/tls-server/tls.crt"
      #       tls_key_file = "/vault/userconfig/tls-server/tls.key"
      #     }

      #     storage "raft" {
      #       path = "/vault/data"
      #       retry_join {
      #         leader_api_addr = "https://vault-0.vault-internal:8200"
      #         leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
      #         leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
      #         leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
      #       }
      #       retry_join {
      #         leader_api_addr = "https://vault-1.vault-internal:8200"
      #         leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
      #         leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
      #         leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
      #       }
      #       retry_join {
      #         leader_api_addr = "https://vault-2.vault-internal:8200"
      #         leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
      #         leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
      #         leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
      #       }
      #       retry_join {
      #         leader_api_addr = "https://vault-3.vault-internal:8200"
      #         leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
      #         leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
      #         leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
      #       }
      #       retry_join {
      #         leader_api_addr = "https://vault-4.vault-internal:8200"
      #         leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
      #         leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
      #         leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
      #       }
      #     } 

  # Vault UI
  ui:
    enabled: true
    serviceType: ClusterIP
    serviceNodePort: null
    externalPort: 8200


namespace: vault

# ingress rules
ingress:
  name: vault-ingress
  rules:
  - host: vault.same3na.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vault-ui
            port:
              number: 8200  # Your internal service port

certificates:
  # vault-ca-cert.yaml
  - name: vault-ca
    secret_name: vault-tls-ca
    isCA: true
    issuerRef:
      name: cert-selfsigned-issuer
      kind: ClusterIssuer

  - name: vault-server
    secret_name: vault-tls-server
    issuerRef:
      name: vault-issuer
      kind: Issuer
    dnsNames:
      - vault
      - vault.vault
      - vault.vault.svc
      - vault.vault.svc.cluster.local
      - vault-ui.vault.svc
